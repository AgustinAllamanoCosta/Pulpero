name: Create Core Release

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Version tag to release (e.g., v1.0.0)'
        required: true
        type: string
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set version variable
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "VERSION=${{ github.event.inputs.version_tag }}" >> $GITHUB_ENV
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi

      - name: Create Core Bundle
        run: |
          cd lua/pulpero/core
          tar -czf core-bundle-${VERSION#v}.tar.gz ./*
          mv "core-bundle-${VERSION#v}.tar.gz" ../../..

      - name: Update Versions Manifest
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          FILENAME="core-bundle-${VERSION#v}.tar.gz"
          CHECKSUM=$(sha256sum "$FILENAME" | cut -d' ' -f1)
          DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          JSON_STRING=$( jq -n \
          --arg cs "$CHECKSUM" \
          --arg vs "$VERSION" \
          --arg fn "$FILENAME" \
          --arg dt "$DATE" \
          --arg url "https://github.com/AgustinAllamanoCosta/pulpero/releases/download/$VERSION/$FILENAME" \
          '{ 
            version: $vs, 
            url: $url, 
            checksum: $cs, 
            releaseDate: $dt, 
            minEditorVersion: "5.0.0", 
            breaking: false
          }')
          jq --argjson new "$JSON_STRING" '.versions += [$new]' releases/versions.json > temp.json && mv temp.json releases/versions.json
          jq ".latest = \"${VERSION#v}\""

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          files: |
            core-bundle-*.tar.gz
            versions.json
